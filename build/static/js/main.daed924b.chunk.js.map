{"version":3,"sources":["components/CardioSubmitter.js","components/LiftSubmitter.js","components/CardioHistory.js","components/LiftHistory.js","components/CardioEditer.js","components/LiftEditer.js","images/headerimg.jpg","images/runrunrun.jpg","images/lifting1.jpg","images/runrunrun2.jpg","images/lifting2.jpg","components/StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","CardioSubmitter","props","onChangeDate","e","console","log","target","setState","date","state","onChangeCardioType","type","value","onChangeMinutes","minutes","onChangeMiles","miles","onChangeCalories","calories","onSubmit","preventDefault","post","then","window","location","handleHistory","history","newCardio","centerit","display","flexDirection","alignItems","justifyContent","nicebuttons","margin","backgroundColor","AppBar","position","Toolbar","style","Link","href","textDecoration","color","Typography","variant","noWrap","Container","Box","maxWidth","this","InputLabel","defaultView","onChange","required","Input","placeholder","Button","onClick","Component","LiftSubmitter","onChangeMuscleGroup","musclegroup","onChangeLiftName","lift","onChangeSets","_numberOfSets","onChangeReps","tempArray","sets","id","reps","newSet","pounds","onChangeRepWeight","length","arrayOfReps","i","push","min","max","step","CardioHistory","componentDidMount","fetch","res","json","handleDelete","url","method","headers","hist","catch","err","handleUpdate","map","_id","LiftHistory","CardioEditer","getDetails","logId","match","params","toString","body","JSON","stringify","data","alert","LiftEditer","className","Copyright","align","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","palette","background","paper","backgroundImage","headerimg","backgroundPosition","backgroundSize","backgroundRepeat","padding","paddingTop","heroButtons","marginTop","cardGrid","paddingBottom","card","height","cardMedia","cardContent","flexGrow","footer","toolbar","textAlign","text","secondary","container","cards","StartPage","classes","CssBaseline","component","gutterBottom","Grid","justify","item","xs","sm","md","Card","CardMedia","image","cardioimg","CardContent","CardActions","size","liftingimg","cardioimg2","liftingimg2","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daed924b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport { Container } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { InputLabel, Box } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\nconst axios = require(\"axios\");\n\n\n\n\nclass CardioSubmitter extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            history: \"\",\n            newCardio: {\n                date: \"\",\n                type: \"\",\n                minutes: 0,\n                miles: 0,\n                calories: 0,\n            }\n        }\n    }\n\n    onChangeDate = (e) => {\n        console.log(e.target)\n        this.setState({date: e.target})\n        console.log(this.state.date)\n    }\n\n    onChangeCardioType = (e) => {\n        console.log(e)\n        this.setState({type: e.target.value})\n    }\n\n    onChangeMinutes = (e) => {\n        console.log(e)\n        this.setState({minutes: e.target.value})\n    }\n\n    onChangeMiles = (e) => {\n        console.log(e)\n        this.setState({miles: e.target.value})\n    }\n\n    onChangeCalories = (e) => {\n        console.log(e)\n        this.setState({calories: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        axios\n            .post(\"https://sculpt-fitness.herokuapp.com/cardio/add\", this.state)\n            .then(() => {\n                console.log(\"attempt submission\")\n                window.location =\"/cardio/history\"\n            })\n        /*\n        let url = \"http://sculpt-fitness.herokuapp.com/cardio\"\n        fetch(url, {\n        method: 'POST', \n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.history),\n      })\n          .then(res => res.json())\n          .then(history=>{\n            this.setState({cardio: [...this.state.history, history]})\n            console.log(this.state)\n          })\n          */\n      }\n\n      handleHistory = (e) => {\n          console.log('handled')\n      } \n\n    render(){\n\n        \n        const centerit = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }\n         \n        const nicebuttons = {\n            margin: \"5px\",\n            backgroundColor: \"black\"\n        }\n    \n        return(\n            <Router>\n      <AppBar position=\"relative\">\n      \n        <Toolbar style= {{backgroundColor: 'black'}} >\n          \n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      \n\n            <Container style={centerit}>\n                <h1>Add Cardio</h1>\n                <Box maxWidth={400} >\n                <form onSubmit={this.onSubmit} style={centerit}>\n                    <div >\n                        <InputLabel>Date: </InputLabel>\n                        <Calendar \n                            defaultView=\"month\"\n                            onChange={this.onChangeDate}\n                        />\n                    </div>\n                    <div>\n                        <InputLabel style={{margin:\"5px\", centerit}}>Cardio Type: </InputLabel>\n                        <select style={{margin:\"5px\"}}\n                        required \n                        onChange={this.onChangeCardioType}\n                        type=\"select\">\n                            <option>Running</option>\n                            <option>Walking</option>\n                            <option>Cycling</option>\n                            <option>Swimming</option>\n                        </select>\n                    </div>\n                    <div>\n                        <InputLabel>Minutes: </InputLabel>\n                        <Input\n                            required \n                            onChange={this.onChangeMinutes}\n                            type=\"number\"\n                            placeholder=\"Workout duration...\">\n                        </Input>\n                    </div>\n                    <div>\n                        <InputLabel>Miles: </InputLabel>\n                        <Input\n                            required \n                            onChange={this.onChangeMiles}\n                            type=\"number\"\n                            placeholder=\"Workout distance...\">\n                        </Input>\n                    </div>\n                    <div>\n                        <InputLabel>Calories: </InputLabel>\n                        <Input\n                            required \n                            onChange={this.onChangeCalories}\n                            type=\"number\"\n                            placeholder=\"Calories burned...\">\n                        </Input>\n                    </div>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        style={nicebuttons}>\n                        Submit\n                    </Button>\n                    <Link href=\"/cardio/history\">\n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={nicebuttons}\n                    onClick={this.handleHistory}>\n                        Cardio History\n                    </Button>\n                </Link>\n                </form>\n                </Box>\n            </Container>\n            </Router>\n        )\n    }\n}\n\nexport default CardioSubmitter","import React, { Component } from \"react\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n// Material UI\nimport { Container } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { InputLabel, Box } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\n\nconst axios = require(\"axios\");\n\nclass LiftSubmitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"\",\n      musclegroup: \"\",\n      lift: \"\",\n      sets: [],\n      _numberOfSets: 0\n    };\n  }\n  onChangeDate = (e) => {\n    this.setState({ date: e });\n  };\n  onChangeMuscleGroup = (e) => {\n    this.setState({ musclegroup: e.target.value });\n  };\n  onChangeLiftName = (e) => {\n    this.setState({ lift: e.target.value });\n  };\n  onChangeSets = (e) => {\n    this.setState({ _numberOfSets: e.target.value });\n  };\n  onChangeReps = (e) => {\n    //makes a copy of the sets array in state\n    var tempArray = this.state.sets;\n    //if the item at the id already exists\n    if (tempArray[e.target.id]) {\n      tempArray[e.target.id].reps = e.target.value;\n    } else {\n      var newSet = { reps: 0, pounds: 777 };\n      newSet.reps = e.target.value;\n      tempArray[e.target.id] = newSet;\n    }\n    this.setState({ sets: tempArray });\n  };\n  onChangeRepWeight = (e) => {\n    //makes a copy of the sets array in state\n    var tempArray = this.state.sets;\n    //if the item at the id already exists\n    if (tempArray[e.target.id]) {\n      tempArray[e.target.id].pounds = e.target.value;\n    } else {\n      var newSet = { reps: 777, pounds: 0 };\n      newSet.pounds = e.target.value;\n      tempArray[e.target.id] = newSet;\n    }\n    this.setState({ sets: tempArray });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state._numberOfSets < this.state.sets.length)\n      console.log(\"user deleted at least one set\");\n    var tempArray = this.state.sets;\n    tempArray.length = this.state._numberOfSets;\n    this.setState({ sets: tempArray });\n    axios\n      .post(\"https://sculpt-fitness.herokuapp.com/lifting/add\", this.state)\n      .then(() => {\n        console.log(\"attempt submission\");\n        window.location = \"/\";\n      });\n  };\n  render() {\n\n    const centerit = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n  }\n   \n    const nicebuttons = {\n      margin: \"5px\",\n      backgroundColor: \"black\"\n  };\n\n\n    //create a reps element for each number in numberOfSets\n    var arrayOfReps = [];\n    for (let i = 0; i < this.state._numberOfSets; i++) {\n      arrayOfReps.push(\n        <div>\n          <InputLabel>Set {i + 1} Reps: </InputLabel>\n          <Input\n            id={i}\n            required\n            onChange={this.onChangeReps}\n            type=\"number\"\n            placeholder=\"5\"\n            min=\"1\"\n            max=\"100\"\n          ></Input>\n          <InputLabel>Set {i + 1} Weight: </InputLabel>\n          <Input\n            id={i}\n            required\n            onChange={this.onChangeRepWeight}\n            type=\"number\"\n            placeholder=\"20\"\n            min=\"10\"\n            step=\"5\"\n            max=\"1000\"\n          ></Input>\n        </div>\n      );\n    }\n    return (\n      <Router>\n      <AppBar position=\"relative\">\n      \n        <Toolbar style= {{backgroundColor: 'black'}} >\n          \n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n\n      <Container style={centerit}>\n        <h1>Add Lift</h1>\n        <Box maxWidth={400}>\n          <form onSubmit={this.onSubmit} style={centerit}>\n            <div>\n              <InputLabel>Date: </InputLabel>\n              <Calendar defaultView=\"month\" onChange={this.onChangeDate} />\n            </div>\n            <div style={{margin: \"5px\", centerit}}>\n              <InputLabel>Muscle Group: </InputLabel>\n              <select style= {{margin: '5px'}}\n                required\n                onChange={this.onChangeMuscleGroup}\n                value={this.state.musclegroup}\n              >\n                <option>Legs</option>\n                <option>Chest</option>\n                <option>Arms</option>\n                <option>Back</option>\n              </select>\n            </div>\n            <div>\n              <InputLabel>Lift Name: </InputLabel>\n              <Input style={{margin: '5px'}}\n                required\n                onChange={this.onChangeLiftName}\n                type=\"text\"\n                placeholder=\"Squat\"\n              ></Input>\n            </div>\n            <div>\n              <InputLabel>Sets: </InputLabel>\n              <Input\n                required\n                onChange={this.onChangeSets}\n                type=\"number\"\n                placeholder=\"1\"\n                step=\"1\"\n                min=\"1\"\n                max=\"10\"\n              ></Input>\n            </div>\n            {arrayOfReps}\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              style={nicebuttons}\n            >\n              Submit\n            </Button>\n            <Link href=\"/lifting/history\">\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              style={nicebuttons}>Lifting History</Button>\n          </Link>\n          </form>\n        </Box>\n      </Container>\n      </Router>\n    );\n  }\n}\nexport default LiftSubmitter;\n/* JSON FORMAT FOR A LIFT \n    {\n      \"date\": \"1519211911670\",\n      \"musclegroup\": \"Legs\",\n      \"lift\": \"Squat\",\n      \"sets\": [\n          {\n              \"reps\":\"10\",\n              \"pounds\":\"135\"\n          },\n          {\n              \"reps\":\"6\",\n              \"pounds\":\"185\"\n          },\n          {\n              \"reps\":\"6\",\n              \"pounds\":\"195\"\n          }\n        ]\n    }\n\n    //Continuing thanks to Beau Carnes at freecodecamp for his MERN tutorial\n*/\n","// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport { Container } from '@material-ui/core';\n// import { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport {  Box } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\n\n\n\n\nclass CardioHistory extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            history: []\n        }\n    }\n\n    componentDidMount = () => {\n        let url = \"http://sculpt-fitness.herokuapp.com/cardio\"\n        fetch(url)\n            .then(res => res.json())\n            .then(history=>{\n                console.log(history)\n                this.setState({history: history})\n            })\n    }\n\n\n    // handleIdMap = (e) => {\n    //     for (let i = 0; i< this.state.history.length; i++){\n    //         this.state._id = this.state.history[i]._id\n    //         console.log(e)\n    //     }\n    // }\n    \n    handleDelete = (id) => {\n        let url = \"https://sculpt-fitness.herokuapp.com/cardio/delete/\" + id\n        console.log(url)\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => res.json())\n            .then(hist => {\n                this.state.history = hist\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleUpdate = (id) => {\n        console.log(id)\n        let url = \"https://sculpt-fitness.herokuapp.com/cardio/specific/\" + id\n        console.log(url)\n    }\n\n    render(){\n        \n        const centerit = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }\n         \n        const nicebuttons = {\n            margin: \"5px\",\n            backgroundColor: \"black\"\n        }\n\n        return(\n            <Router>\n      <AppBar position=\"relative\">\n      \n        <Toolbar style= {{backgroundColor: 'black'}} >\n          \n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n            <Container style={centerit}>\n                <h1>Your Previous Cardio Workouts</h1>\n                <Box>\n                {\n                    this.state.history.length ?\n                    this.state.history.map((lift, i)=>{\n                        console.log(lift)\n                    return <div style={centerit}\n                            key={i} >\n                        {lift.date}<br/>\n                        {lift.type}<br/>\n                        {lift.minutes} minutes<br/>\n                        {lift.miles} miles<br/>\n                        {lift.calories} cals<br/><br/>\n                        <Link href={`/cardio/edit/${lift._id}`}>\n                            <Button style={nicebuttons}\n                            onClick={() => {\n                                this.handleUpdate(lift._id)\n                            }}\n                            variant=\"contained\"\n                            color='primary'>\n                                update\n                            </Button><br/>\n                        </Link>\n                        <Button style={nicebuttons}\n                        onClick={() => {\n                            this.handleDelete(lift._id)\n                        }} \n                        variant=\"contained\"\n                        color=\"primary\">\n                            delete\n                        </Button><br/>\n                        <br/>\n                        </div>\n                        \n                    }) : \"\"\n                }\n                <Link href='/cardio'>\n                    <Button style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                        Back\n                    </Button>\n                </Link>\n                <Link href='/'>\n                    <Button style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                        Home\n                    </Button>\n                </Link>\n                </Box>\n            </Container>\n            </Router>\n        )\n    }\n}\n\nexport default CardioHistory","// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport { Container } from '@material-ui/core';\n// import { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\n\n\nclass LiftHistory extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            history: []\n        }\n    }\n\n\n    componentDidMount = () => {\n        let url = \"http://sculpt-fitness.herokuapp.com/lifting\"\n        fetch(url)\n            .then(res => res.json())\n            .then(history=>{\n                console.log(history)\n                this.setState({history: history})\n            })\n    }\n\n    handleUpdate = (id) => {\n        console.log(id)\n        let url = \"https://sculpt-fitness.herokuapp.com/lifting/update/\" + id\n        console.log(url)\n    }\n\n    handleDelete = (id) => {\n        let url = \"https://sculpt-fitness.herokuapp.com/lifting/delete/\" + id\n        console.log(url)\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => res.json())\n            .then(hist => {\n                console.log(hist)\n                this.state.history = hist\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render(){\n        const centerit = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }\n         \n          const nicebuttons = {\n            margin: \"5px\",\n            backgroundColor: \"black\"\n        };\n\n        return(\n            <Router>\n            <AppBar position=\"relative\">\n      \n        <Toolbar style={{backgroundColor:\"black\"}}>\n\n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      \n            <Container style={centerit}>\n                <h1>Your Previous Lifts</h1>\n                <Box>\n                    {\n                    this.state.history.length ?\n                    this.state.history.map((lift, i)=>{\n                    return <div style={centerit}\n                        key={i}>\n                        {lift.date}<br/>\n                        {lift.musclegroup}<br/>\n                        {lift.lift}<br/>\n                        {lift.sets[0].reps} reps {lift.sets[0].pounds} lbs.<br/>\n                        <Link href={`/lifting/edit/${lift._id}`}>\n                            <Button\n                            onClick={() => {\n                                this.handleUpdate(lift._id)\n                            }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={nicebuttons}>\n                                update\n                            </Button>\n                        </Link><br/>\n                        <Button \n                        onClick={() => {\n                            this.handleDelete(lift._id)\n                        }} \n                        style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                            delete\n                        </Button><br/>\n                        <br/>\n                        </div>\n                    }) : \"\"\n                    }\n                <Link href='/lifting'>\n                    <Button \n                        style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                        Back\n                    </Button>\n                </Link>\n                <Link href='/'>\n                    <Button \n                        style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                        Home\n                    </Button>\n                </Link>\n                </Box>\n            </Container>\n            </Router>\n        )\n    }\n}\n\n\nexport default LiftHistory","import React, { Component } from \"react\";\n// import { CollectionsOutlined } from '@material-ui/icons';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport { Container } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { InputLabel, Box } from '@material-ui/core';\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\n\n// const axios = require(\"axios\");\n// const cors = require('cors')\n\nclass CardioEditer extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            date: \"\",\n            type: \"\",\n            minutes: \"\",\n            miles: \"\",\n            calories: \"\"\n        }\n    }\n    componentDidMount(){\n        this.getDetails()\n    }\n\n    getDetails = () => {\n        let logId = this.props.match.params.id;\n        let url = \"https://sculpt-fitness.herokuapp.com/cardio/specific/\" + logId\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    date: res.date,\n                    type: res.type,\n                    minutes: res.minutes,\n                    miles: res.miles,\n                    calories: res.calories\n                }, () => {\n                    console.log(this.state)\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    onChangeDate = (e) => {\n        console.log(e)\n        this.setState({date: e})\n    }\n\n    onChangeCardioType = (e) => {\n        console.log(e)\n        this.setState({type: e.target.value})\n    }\n\n    onChangeMinutes = (e) => {\n        console.log(e)\n        this.setState({minutes: e.target.value})\n    }\n\n    onChangeMiles = (e) => {\n        console.log(e)\n        this.setState({miles: e.target.value})\n    }\n\n    onChangeCalories = (e) => {\n        console.log(e)\n        this.setState({calories: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        let logId = this.props.match.params.id.toString()\n        let url = \"https://sculpt-fitness.herokuapp.com/cardio/update/\" + logId\n        console.log(this.state)\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        })\n            .then(res => res.json())\n            .then(data=>{\n                console.log(data)\n                this.setState({\n                    date: data.date,\n                    type: data.type,\n                    minutes: data.minutes,\n                    miles: data.miles,\n                    calories: data.calories})\n            })\n            .catch(err => console.log(err))\n            alert('Updated successfully!')\n            window.location = \"/cardio/history/\"\n        }\n\n\n\n    render(){\n        const centerit = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }\n         \n        const nicebuttons = {\n            margin: \"5px\",\n            backgroundColor: \"black\"\n        }\n\n        return(\n            <Router>\n      <AppBar position=\"relative\">\n      \n        <Toolbar style= {{backgroundColor: 'black'}} >\n          \n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n\n            <div>\n                <Container style={centerit} >\n                    <Box>\n                        <h1>Edit Cardio Entry</h1>\n                    </Box>\n                    <Box>\n                        <form onSubmit={this.onSubmit} style={centerit} >\n                            <div>\n                                <InputLabel>Date: </InputLabel>\n                                <Calendar \n                                    defaultView=\"month\"\n                                    onChange={this.onChangeDate}\n                                />\n                            </div>\n                            <div>\n                                <InputLabel onSubmit={this.onSubmit} style={{centerit ,margin:'5px'}}>Cardio Type: </InputLabel>\n                                <select style={{margin:\"5px\"}}\n                                required \n                                onChange={this.onChangeCardioType}\n                                type=\"select\">\n                                    <option>Running</option>\n                                    <option>Walking</option>\n                                    <option>Cycling</option>\n                                    <option>Swimming</option>\n                                </select>\n                            </div>\n                            <div>\n                                <InputLabel>Minutes: </InputLabel>\n                                <Input\n                                    required \n                                    onChange={this.onChangeMinutes}\n                                    type=\"number\"\n                                    placeholder=\"Workout duration...\">\n                                </Input>\n                            </div>\n                            <div>\n                                <InputLabel>Miles: </InputLabel>\n                                <Input\n                                    required \n                                    onChange={this.onChangeMiles}\n                                    type=\"number\"\n                                    placeholder=\"Workout distance...\">\n                                </Input>\n                            </div>\n                            <div>\n                                <InputLabel>Calories: </InputLabel>\n                                <Input\n                                    required \n                                    onChange={this.onChangeCalories}\n                                    type=\"number\"\n                                    placeholder=\"Calories burned...\">\n                                </Input>\n                            </div>\n                                <Button \n                                    style={nicebuttons}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"submit\"\n                                    >\n                                    Submit\n                                </Button>\n                                <Link href=\"/cardio/history\">\n                                <Button \n                                    style={nicebuttons}\n                                    variant=\"contained\"\n                                    color='primary'>\n                                    Back\n                                </Button>\n                                </Link>\n                        </form>\n                    </Box>\n                </Container>\n            </div>\n            </Router>\n        )\n    }\n}\n\nexport default CardioEditer\n\n","import React, { Component } from \"react\";\n// import { CollectionsOutlined } from '@material-ui/icons';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Container } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { InputLabel, Box } from '@material-ui/core';\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from '@material-ui/core';\n\n// const axios = require(\"axios\");\n// const cors = require('cors')\n\nclass LiftEditer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          date: \"\",\n          musclegroup: \"\",\n          lift: \"\",\n          sets: [],\n          _numberOfSets: 0\n        };\n      }\n\n\n      componentDidMount(){\n        this.getDetails()\n    }\n\n    getDetails = () => {\n        let logId = this.props.match.params.id;\n        let url = \"https://sculpt-fitness.herokuapp.com/lifting/specific/\" + logId\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    date: data.date,\n                    musclegroup: data.musclegroup,\n                    lift: data.lift,\n                    sets: data.sets,\n                    _numberOfSets: data.sets.length\n                }, () => {\n                    console.log(this.state)\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n      onChangeDate = (e) => {\n        this.setState({ date: e });\n      };\n      onChangeMuscleGroup = (e) => {\n        this.setState({ musclegroup: e.target.value });\n      };\n      onChangeLiftName = (e) => {\n        this.setState({ lift: e.target.value });\n      };\n      onChangeSets = (e) => {\n        this.setState({ _numberOfSets: e.target.value });\n      };\n      onChangeReps = (e) => {\n        //makes a copy of the sets array in state\n        var tempArray = this.state.sets;\n        //if the item at the id already exists\n        if (tempArray[e.target.id]) {\n          tempArray[e.target.id].reps = e.target.value;\n        } else {\n          var newSet = { reps: 0, pounds: 777 };\n          newSet.reps = e.target.value;\n          tempArray[e.target.id] = newSet;\n        }\n        this.setState({ sets: tempArray });\n      };\n      onChangeRepWeight = (e) => {\n        //makes a copy of the sets array in state\n        var tempArray = this.state.sets;\n        //if the item at the id already exists\n        if (tempArray[e.target.id]) {\n          tempArray[e.target.id].pounds = e.target.value;\n        } else {\n          var newSet = { reps: 777, pounds: 0 };\n          newSet.pounds = e.target.value;\n          tempArray[e.target.id] = newSet;\n        }\n        this.setState({ sets: tempArray });\n      };\n\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        let logId = this.props.match.params.id;\n        let url = \"https://sculpt-fitness.herokuapp.com/lifting/update/\" + logId\n        console.log(this.state)\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.state)\n        })\n            .then(res => res.json())\n            .then(data=>{\n                console.log(data)\n                this.setState({\n                    date: data.date,\n                    musclegroup: data.musclegroup,\n                    lift: data.lift,\n                    sets: data.sets,\n                    _numberOfSets: data._numberOfSets})\n            })\n            .catch(err => console.log(err))\n            alert(\"Updated successfully!\")\n            window.location = \"/lifting/history/\"\n        }\n\n\n\n    render(){\n      const centerit = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    }\n     \n      const nicebuttons = {\n        margin: \"5px\",\n        backgroundColor: \"black\"\n    };\n\n\n\n        var arrayOfReps = [];\n            for (let i = 0; i < this.state._numberOfSets; i++) {\n            arrayOfReps.push(\n                <div key={i}>\n                <InputLabel>Set {i + 1} Reps: </InputLabel>\n                <Input\n                    id={i}\n                    required\n                    onChange={this.onChangeReps}\n                    type=\"number\"\n                    placeholder=\"5\"\n                    min=\"1\"\n                    max=\"100\"\n                ></Input>\n                <InputLabel>Set {i + 1} Weight: </InputLabel>\n                <Input\n                    id={i}\n                    required\n                    onChange={this.onChangeRepWeight}\n                    type=\"number\"\n                    placeholder=\"20\"\n                    min=\"10\"\n                    step=\"5\"\n                    max=\"1000\"\n                ></Input>\n                </div>\n            );\n            }\n        return(\n            <Router>\n            <AppBar position=\"relative\">\n            \n              <Toolbar style= {{backgroundColor: 'black'}} >\n                \n                  <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n                <Typography variant=\"h6\" color=\"inherit\" noWrap >\n                  MRJ FITNESS\n                </Typography>\n                </Link>\n              </Toolbar>\n            </AppBar>\n\n            <div>\n                <Container style={centerit}>\n                    <Box>\n                        <h1>Edit Lifting Entry</h1>\n                    </Box>\n                    <Box >\n                        <form style={centerit}\n                        onSubmit={this.onSubmit}>\n                            <div>\n                                <InputLabel>Date: </InputLabel>\n                                <Calendar defaultView=\"month\" onChange={this.onChangeDate} />\n                            </div>\n                            <div style={{margin:\"5px\", centerit}}>\n                                <InputLabel style={{margin:\"5px\"}}\n                                >Muscle Group: </InputLabel>\n                                <select \n                                    required\n                                    onChange={this.onChangeMuscleGroup}\n                                    value={this.state.musclegroup}>\n                                    <option>Legs</option>\n                                    <option>Chest</option>\n                                    <option>Arms</option>\n                                    <option>Back</option>\n                                </select>\n                            </div>\n                            <div className=\"\">\n                                <InputLabel>Lift Name: </InputLabel>\n                                <Input\n                                    required\n                                    onChange={this.onChangeLiftName}\n                                    type=\"text\"\n                                    placeholder=\"Squat\"\n                                ></Input>\n                            </div>\n                            <div className=\"\">\n                                <InputLabel>Sets: </InputLabel>\n                                <Input\n                                    required\n                                    onChange={this.onChangeSets}\n                                    type=\"number\"\n                                    placeholder=\"1\"\n                                    step=\"1\"\n                                    min=\"1\"\n                                    max=\"10\"\n                                ></Input>\n                            </div>\n                            {arrayOfReps}\n                            <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            style={nicebuttons}\n                            >\n                            Submit\n                            </Button>\n                        </form>\n                    </Box>\n                    <Link href=\"/lifting/history\">\n                        <Button \n                        style={nicebuttons}\n                        variant=\"contained\"\n                        color=\"primary\">\n                            Cancel\n                        </Button>\n                    </Link>\n                </Container>\n            </div>\n            </Router>\n        )\n    }\n}\n\nexport default LiftEditer","export default __webpack_public_path__ + \"static/media/headerimg.45073048.jpg\";","export default __webpack_public_path__ + \"static/media/runrunrun.abec4229.jpg\";","export default __webpack_public_path__ + \"static/media/lifting1.865ba021.jpg\";","export default __webpack_public_path__ + \"static/media/runrunrun2.9edd996a.jpg\";","export default __webpack_public_path__ + \"static/media/lifting2.855b2ad8.jpg\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// import { Link } from \"react-router-dom\";\nimport headerimg from '../images/headerimg.jpg';\nimport './StartPage.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport cardioimg from '../images/runrunrun.jpg';\nimport liftingimg from '../images/lifting1.jpg';\nimport cardioimg2 from '../images/runrunrun2.jpg';\nimport liftingimg2 from '../images/lifting2.jpg';\n// import { render } from '@testing-library/react';\nimport {Link} from '@material-ui/core';\n\n\nfunction Copyright() {\n  return (\n    <Router>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        MRJ FITNESS\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n    </Router>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    backgroundImage: `url(${headerimg})`,\n    backgroundPosition: 'right center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    padding: theme.spacing(8, 0, 6),\n    paddingTop: '100px'\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    paddingTop: '80px'\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  toolbar:{\n    backgroundColor: \"black\",\n  },\n  paper: {\n    padding: theme.spacing(1), //grid padding\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  container:{\n    backgroundColor: \"black\",\n  }\n}));\n\n\n// const cards = [{runningimg}, {lifting}, {cardio}, {cardiotwo}];\n\n// const cards = [{img:{runningimg}, title: 'run one'},\n// {img:{lifting}, title: 'lift'},\n// {img:{cardio}, title: 'cardio'},\n// {img:{cardiotwo}, title: 'cardio two'}];\n\nlet cards = [1,2,3,4]\n\n\n\n\n\nexport default function StartPage() {\n  const classes = useStyles();\n  \n  \n  return (\n  \n    <Router>\n      <CssBaseline />\n      <Router>\n      <AppBar position=\"relative\">\n      \n        <Toolbar className={classes.toolbar}>\n          {/* <CameraIcon img src={homeimg} className={classes.icon} /> */}\n\n            <Link href=\"/\"  style={{ textDecoration: 'none' , color: 'white'}}   >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap >\n            MRJ FITNESS\n          </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      </Router>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              MRJ FITNESS\n            </Typography>\n            \n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  {/* <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button> */}\n                </Grid>\n                <Grid item>\n                  {/* <Button variant=\"contained\" color=\"primary\">\n                    Secondary action\n                  </Button> */}\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n          \n              <Grid item key={cards} xs={2} sm={2} md={6}>\n              <Card className={classes.cards}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image= {cardioimg}\n                    \n                  />\n                  \n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Cardio\n                    </Typography>\n                    <Typography>\n                      Create & Submit Your Cardio Routine\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    \n                    <Link href= \"/cardio\"  style={{ textDecoration: 'none' }}>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item key={cards} xs={2} sm={2} md={6}>\n              <Card className={classes.cards}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image= {liftingimg}\n                    \n                  />\n                  \n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Lifting\n                    </Typography>\n                    <Typography>\n                      Create & Submit Your Lifting Routine\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    \n                    <Link href=\"/lifting\" style={{ textDecoration: 'none' }}>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item key={cards} xs={2} sm={2} md={6}>\n              <Card className={classes.cards}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image= {cardioimg2}\n                    \n                  />\n                  \n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Cardio History\n                    </Typography>\n                    <Typography>\n                     Access Your Cardio Routine. Update & Delete Available\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    \n                    <Link href=\"/cardio/history\" style={{ textDecoration: 'none' }}>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item key={cards} xs={2} sm={2} md={6}>\n              <Card className={classes.cards}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image= {liftingimg2}\n                    \n                  />\n                  \n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Lifting History\n                    </Typography>\n                    <Typography>\n                    Access Your Lifting Routine. Update & Delete Available\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    \n                    <Link href=\"/lifting/history\" style={{ textDecoration: 'none' }}>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n              \n            \n          </Grid>\n          \n        </Container>\n        \n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          MRJ FITNESS\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Matthew Knight Lewis. Robert Shirak. Jesse Maretz.\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </Router>\n  );\n}\n\n","import './App.css';\nimport React, {Component} from 'react'\n// import { render } from '@testing-library/react';\nimport CardioSubmitter from './components/CardioSubmitter'\nimport LiftSubmitter from './components/LiftSubmitter'\nimport CardioHistory from './components/CardioHistory'\nimport LiftHistory from './components/LiftHistory'\nimport CardioEditer from './components/CardioEditer'\nimport LiftEditer from './components/LiftEditer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport StartPage from './components/StartPage'\nclass App extends Component {\n  constructor(props){\n    super(props)\n  }\n  render(){\n    return(\n      <div>\n        \n        <Router>\n          <Route exact path=\"/\"\n          component= {StartPage} />\n          <Route exact path=\"/cardio\"\n          component={CardioSubmitter} />\n          <Route exact path=\"/lifting\"\n          component={LiftSubmitter} />\n          <Route exact path=\"/cardio/history\"\n          component={CardioHistory} />\n          <Route exact path=\"/lifting/history\"\n          component={LiftHistory} />\n          <Route exact path=\"/cardio/edit/:id\"\n          component={CardioEditer} />\n          <Route exact path=\"/lifting/edit/:id\"\n          component={LiftEditer} />\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}